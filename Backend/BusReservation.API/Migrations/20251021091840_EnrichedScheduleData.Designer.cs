// <auto-generated />
using System;
using BusReservation.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusReservation.API.Migrations
{
    [DbContext(typeof(BusReservationDbContext))]
    [Migration("20251021091840_EnrichedScheduleData")]
    partial class EnrichedScheduleData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusReservation.API.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingReference")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<string>("PassengerEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassengerPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumbers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BusReservation.API.Models.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusId"));

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("BusId");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            BusId = 1,
                            Amenities = "WiFi, Charging Point, Water Bottle",
                            BasePrice = 1200m,
                            BusName = "Green Line Paribahan",
                            BusNumber = "DH-11-5678",
                            BusType = "AC Sleeper",
                            IsActive = true,
                            TotalSeats = 40
                        },
                        new
                        {
                            BusId = 5,
                            Amenities = "WiFi, Charging Point, Water Bottle",
                            BasePrice = 1250m,
                            BusName = "Green Line Paribahan",
                            BusNumber = "DH-11-5679",
                            BusType = "AC Sleeper",
                            IsActive = true,
                            TotalSeats = 40
                        },
                        new
                        {
                            BusId = 2,
                            Amenities = "Water Bottle",
                            BasePrice = 800m,
                            BusName = "Shyamoli Paribahan",
                            BusNumber = "CH-15-9012",
                            BusType = "Non-AC Seater",
                            IsActive = true,
                            TotalSeats = 45
                        },
                        new
                        {
                            BusId = 6,
                            Amenities = "WiFi, Water Bottle",
                            BasePrice = 950m,
                            BusName = "Shyamoli Paribahan",
                            BusNumber = "CH-15-9013",
                            BusType = "AC Seater",
                            IsActive = true,
                            TotalSeats = 45
                        },
                        new
                        {
                            BusId = 3,
                            Amenities = "WiFi, Water Bottle",
                            BasePrice = 1000m,
                            BusName = "Hanif Enterprise",
                            BusNumber = "DH-12-3456",
                            BusType = "AC Seater",
                            IsActive = true,
                            TotalSeats = 50
                        },
                        new
                        {
                            BusId = 7,
                            Amenities = "WiFi, Charging Point, Blanket",
                            BasePrice = 1300m,
                            BusName = "Hanif Enterprise",
                            BusNumber = "DH-12-3457",
                            BusType = "AC Sleeper",
                            IsActive = true,
                            TotalSeats = 38
                        },
                        new
                        {
                            BusId = 4,
                            Amenities = "WiFi, Charging Point, Blanket, Water Bottle",
                            BasePrice = 1400m,
                            BusName = "Ena Transport",
                            BusNumber = "RJ-10-7890",
                            BusType = "AC Sleeper",
                            IsActive = true,
                            TotalSeats = 35
                        },
                        new
                        {
                            BusId = 8,
                            Amenities = "WiFi, Water Bottle",
                            BasePrice = 1100m,
                            BusName = "Ena Transport",
                            BusNumber = "RJ-10-7891",
                            BusType = "AC Seater",
                            IsActive = true,
                            TotalSeats = 48
                        },
                        new
                        {
                            BusId = 9,
                            Amenities = "WiFi, Charging Point, Blanket, Water Bottle",
                            BasePrice = 1350m,
                            BusName = "National Travels",
                            BusNumber = "CB-20-1001",
                            BusType = "AC Sleeper",
                            IsActive = true,
                            TotalSeats = 42
                        },
                        new
                        {
                            BusId = 10,
                            Amenities = "WiFi, Water Bottle",
                            BasePrice = 1050m,
                            BusName = "National Travels",
                            BusNumber = "CB-20-1002",
                            BusType = "AC Seater",
                            IsActive = true,
                            TotalSeats = 52
                        },
                        new
                        {
                            BusId = 11,
                            Amenities = "WiFi, Charging Point, Blanket",
                            BasePrice = 1280m,
                            BusName = "Grameen Travels",
                            BusNumber = "DH-13-2001",
                            BusType = "AC Sleeper",
                            IsActive = true,
                            TotalSeats = 39
                        },
                        new
                        {
                            BusId = 12,
                            Amenities = "Water Bottle",
                            BasePrice = 750m,
                            BusName = "Grameen Travels",
                            BusNumber = "DH-13-2002",
                            BusType = "Non-AC Seater",
                            IsActive = true,
                            TotalSeats = 50
                        });
                });

            modelBuilder.Entity("BusReservation.API.Models.BusRoute", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Distance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("EstimatedDuration")
                        .HasColumnType("time");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            RouteId = 1,
                            Destination = "Rajshahi",
                            Distance = 256m,
                            EstimatedDuration = new TimeSpan(0, 6, 0, 0, 0),
                            Source = "Dhaka"
                        },
                        new
                        {
                            RouteId = 2,
                            Destination = "Chittagong",
                            Distance = 264m,
                            EstimatedDuration = new TimeSpan(0, 7, 0, 0, 0),
                            Source = "Dhaka"
                        },
                        new
                        {
                            RouteId = 3,
                            Destination = "Cox's Bazar",
                            Distance = 400m,
                            EstimatedDuration = new TimeSpan(0, 10, 0, 0, 0),
                            Source = "Dhaka"
                        },
                        new
                        {
                            RouteId = 4,
                            Destination = "Sylhet",
                            Distance = 245m,
                            EstimatedDuration = new TimeSpan(0, 6, 0, 0, 0),
                            Source = "Dhaka"
                        },
                        new
                        {
                            RouteId = 5,
                            Destination = "Khulna",
                            Distance = 280m,
                            EstimatedDuration = new TimeSpan(0, 7, 0, 0, 0),
                            Source = "Dhaka"
                        },
                        new
                        {
                            RouteId = 6,
                            Destination = "Barisal",
                            Distance = 240m,
                            EstimatedDuration = new TimeSpan(0, 6, 0, 0, 0),
                            Source = "Dhaka"
                        },
                        new
                        {
                            RouteId = 7,
                            Destination = "Cox's Bazar",
                            Distance = 152m,
                            EstimatedDuration = new TimeSpan(0, 3, 0, 0, 0),
                            Source = "Chittagong"
                        },
                        new
                        {
                            RouteId = 8,
                            Destination = "Sylhet",
                            Distance = 350m,
                            EstimatedDuration = new TimeSpan(0, 8, 0, 0, 0),
                            Source = "Chittagong"
                        });
                });

            modelBuilder.Entity("BusReservation.API.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JourneyDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId");

                    b.HasIndex("BusId");

                    b.HasIndex("RouteId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            ScheduleId = 1,
                            ArrivalTime = new DateTime(2025, 10, 22, 4, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 35,
                            BusId = 1,
                            DepartureTime = new DateTime(2025, 10, 21, 22, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1250m,
                            RouteId = 1
                        },
                        new
                        {
                            ScheduleId = 2,
                            ArrivalTime = new DateTime(2025, 10, 22, 2, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 38,
                            BusId = 5,
                            DepartureTime = new DateTime(2025, 10, 21, 20, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1300m,
                            RouteId = 1
                        },
                        new
                        {
                            ScheduleId = 101,
                            ArrivalTime = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 42,
                            BusId = 3,
                            DepartureTime = new DateTime(2025, 10, 21, 18, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1200m,
                            RouteId = 1
                        },
                        new
                        {
                            ScheduleId = 102,
                            ArrivalTime = new DateTime(2025, 10, 21, 22, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 36,
                            BusId = 11,
                            DepartureTime = new DateTime(2025, 10, 21, 16, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1350m,
                            RouteId = 1
                        },
                        new
                        {
                            ScheduleId = 3,
                            ArrivalTime = new DateTime(2025, 10, 21, 14, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 42,
                            BusId = 2,
                            DepartureTime = new DateTime(2025, 10, 21, 7, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 850m,
                            RouteId = 2
                        },
                        new
                        {
                            ScheduleId = 4,
                            ArrivalTime = new DateTime(2025, 10, 21, 17, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 40,
                            BusId = 6,
                            DepartureTime = new DateTime(2025, 10, 21, 10, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1000m,
                            RouteId = 2
                        },
                        new
                        {
                            ScheduleId = 5,
                            ArrivalTime = new DateTime(2025, 10, 21, 13, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 35,
                            BusId = 9,
                            DepartureTime = new DateTime(2025, 10, 21, 6, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1400m,
                            RouteId = 2
                        },
                        new
                        {
                            ScheduleId = 103,
                            ArrivalTime = new DateTime(2025, 10, 21, 19, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 45,
                            BusId = 10,
                            DepartureTime = new DateTime(2025, 10, 21, 12, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 950m,
                            RouteId = 2
                        },
                        new
                        {
                            ScheduleId = 104,
                            ArrivalTime = new DateTime(2025, 10, 21, 15, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 43,
                            BusId = 8,
                            DepartureTime = new DateTime(2025, 10, 21, 8, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1100m,
                            RouteId = 2
                        },
                        new
                        {
                            ScheduleId = 6,
                            ArrivalTime = new DateTime(2025, 10, 22, 7, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 48,
                            BusId = 3,
                            DepartureTime = new DateTime(2025, 10, 21, 21, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1100m,
                            RouteId = 3
                        },
                        new
                        {
                            ScheduleId = 7,
                            ArrivalTime = new DateTime(2025, 10, 22, 5, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 30,
                            BusId = 7,
                            DepartureTime = new DateTime(2025, 10, 21, 19, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1450m,
                            RouteId = 3
                        },
                        new
                        {
                            ScheduleId = 105,
                            ArrivalTime = new DateTime(2025, 10, 22, 6, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 32,
                            BusId = 4,
                            DepartureTime = new DateTime(2025, 10, 21, 20, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1500m,
                            RouteId = 3
                        },
                        new
                        {
                            ScheduleId = 8,
                            ArrivalTime = new DateTime(2025, 10, 22, 5, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 33,
                            BusId = 4,
                            DepartureTime = new DateTime(2025, 10, 21, 23, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1450m,
                            RouteId = 4
                        },
                        new
                        {
                            ScheduleId = 9,
                            ArrivalTime = new DateTime(2025, 10, 22, 4, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 34,
                            BusId = 11,
                            DepartureTime = new DateTime(2025, 10, 21, 22, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1320m,
                            RouteId = 4
                        },
                        new
                        {
                            ScheduleId = 106,
                            ArrivalTime = new DateTime(2025, 10, 22, 3, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 37,
                            BusId = 1,
                            DepartureTime = new DateTime(2025, 10, 21, 21, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1380m,
                            RouteId = 4
                        },
                        new
                        {
                            ScheduleId = 10,
                            ArrivalTime = new DateTime(2025, 10, 22, 4, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 41,
                            BusId = 8,
                            DepartureTime = new DateTime(2025, 10, 21, 21, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1200m,
                            RouteId = 5
                        },
                        new
                        {
                            ScheduleId = 11,
                            ArrivalTime = new DateTime(2025, 10, 22, 3, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 46,
                            BusId = 10,
                            DepartureTime = new DateTime(2025, 10, 21, 20, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1100m,
                            RouteId = 5
                        },
                        new
                        {
                            ScheduleId = 107,
                            ArrivalTime = new DateTime(2025, 10, 22, 2, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 42,
                            BusId = 6,
                            DepartureTime = new DateTime(2025, 10, 21, 19, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 950m,
                            RouteId = 5
                        },
                        new
                        {
                            ScheduleId = 12,
                            ArrivalTime = new DateTime(2025, 10, 21, 14, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 48,
                            BusId = 12,
                            DepartureTime = new DateTime(2025, 10, 21, 8, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 800m,
                            RouteId = 6
                        },
                        new
                        {
                            ScheduleId = 13,
                            ArrivalTime = new DateTime(2025, 10, 21, 20, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 38,
                            BusId = 2,
                            DepartureTime = new DateTime(2025, 10, 21, 14, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 850m,
                            RouteId = 6
                        },
                        new
                        {
                            ScheduleId = 108,
                            ArrivalTime = new DateTime(2025, 10, 21, 17, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 44,
                            BusId = 9,
                            DepartureTime = new DateTime(2025, 10, 21, 11, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 900m,
                            RouteId = 6
                        },
                        new
                        {
                            ScheduleId = 14,
                            ArrivalTime = new DateTime(2025, 10, 21, 9, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 37,
                            BusId = 9,
                            DepartureTime = new DateTime(2025, 10, 21, 6, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 600m,
                            RouteId = 7
                        },
                        new
                        {
                            ScheduleId = 15,
                            ArrivalTime = new DateTime(2025, 10, 21, 17, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 39,
                            BusId = 6,
                            DepartureTime = new DateTime(2025, 10, 21, 14, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 650m,
                            RouteId = 7
                        },
                        new
                        {
                            ScheduleId = 109,
                            ArrivalTime = new DateTime(2025, 10, 21, 13, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 36,
                            BusId = 5,
                            DepartureTime = new DateTime(2025, 10, 21, 10, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 620m,
                            RouteId = 7
                        },
                        new
                        {
                            ScheduleId = 16,
                            ArrivalTime = new DateTime(2025, 10, 21, 16, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 33,
                            BusId = 11,
                            DepartureTime = new DateTime(2025, 10, 21, 8, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1350m,
                            RouteId = 8
                        },
                        new
                        {
                            ScheduleId = 110,
                            ArrivalTime = new DateTime(2025, 10, 21, 17, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 29,
                            BusId = 7,
                            DepartureTime = new DateTime(2025, 10, 21, 9, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1400m,
                            RouteId = 8
                        },
                        new
                        {
                            ScheduleId = 111,
                            ArrivalTime = new DateTime(2025, 10, 23, 4, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 40,
                            BusId = 1,
                            DepartureTime = new DateTime(2025, 10, 22, 22, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1250m,
                            RouteId = 1
                        },
                        new
                        {
                            ScheduleId = 112,
                            ArrivalTime = new DateTime(2025, 10, 22, 14, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 45,
                            BusId = 2,
                            DepartureTime = new DateTime(2025, 10, 22, 7, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 850m,
                            RouteId = 2
                        },
                        new
                        {
                            ScheduleId = 113,
                            ArrivalTime = new DateTime(2025, 10, 23, 7, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 50,
                            BusId = 3,
                            DepartureTime = new DateTime(2025, 10, 22, 21, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1100m,
                            RouteId = 3
                        },
                        new
                        {
                            ScheduleId = 114,
                            ArrivalTime = new DateTime(2025, 10, 23, 5, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 35,
                            BusId = 4,
                            DepartureTime = new DateTime(2025, 10, 22, 23, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1450m,
                            RouteId = 4
                        },
                        new
                        {
                            ScheduleId = 115,
                            ArrivalTime = new DateTime(2025, 10, 23, 4, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 44,
                            BusId = 8,
                            DepartureTime = new DateTime(2025, 10, 22, 21, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1200m,
                            RouteId = 5
                        },
                        new
                        {
                            ScheduleId = 116,
                            ArrivalTime = new DateTime(2025, 10, 22, 14, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 50,
                            BusId = 12,
                            DepartureTime = new DateTime(2025, 10, 22, 8, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 800m,
                            RouteId = 6
                        },
                        new
                        {
                            ScheduleId = 117,
                            ArrivalTime = new DateTime(2025, 10, 22, 9, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 39,
                            BusId = 9,
                            DepartureTime = new DateTime(2025, 10, 22, 6, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 600m,
                            RouteId = 7
                        },
                        new
                        {
                            ScheduleId = 118,
                            ArrivalTime = new DateTime(2025, 10, 22, 16, 0, 0, 0, DateTimeKind.Local),
                            AvailableSeats = 35,
                            BusId = 11,
                            DepartureTime = new DateTime(2025, 10, 22, 8, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            JourneyDate = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            Price = 1350m,
                            RouteId = 8
                        });
                });

            modelBuilder.Entity("BusReservation.API.Models.Booking", b =>
                {
                    b.HasOne("BusReservation.API.Models.Schedule", "Schedule")
                        .WithMany("Bookings")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusReservation.API.Models.Schedule", b =>
                {
                    b.HasOne("BusReservation.API.Models.Bus", "Bus")
                        .WithMany("Schedules")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusReservation.API.Models.BusRoute", "Route")
                        .WithMany("Schedules")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("BusReservation.API.Models.Bus", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("BusReservation.API.Models.BusRoute", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("BusReservation.API.Models.Schedule", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
